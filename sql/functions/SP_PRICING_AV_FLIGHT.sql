CREATE
	OR REPLACE PROCEDURE SP_PRICING_AV_FLIGHT1 (
	IN IN_TOCODE VARCHAR(5) DEFAULT ''
	,IN IN_DEPAIRPORTCODE VARCHAR(5) DEFAULT ''
	,IN IN_ARRAIRPORTCODE VARCHAR(5) DEFAULT ''
	,IN IN_PRICEDATEFROM VARCHAR(10)
	,IN IN_PRICEDATETO VARCHAR(10)
	,IN IN_NRADULTS INTEGER DEFAULT 2
	,IN IN_CHDDOB1 VARCHAR(10) DEFAULT ''
	,IN IN_CHDDOB2 VARCHAR(10) DEFAULT ''
	,IN IN_CHDDOB3 VARCHAR(10) DEFAULT ''
	,IN IN_CHDDOB4 VARCHAR(10) DEFAULT ''
	,IN IN_IGNORE_XX INTEGER DEFAULT 0
	,IN IN_IGNORE_RQ INTEGER DEFAULT 0
	,IN IN_IGNORE_PRICE0 INTEGER DEFAULT 1
	,IN IN_CURRENTDATE VARCHAR(10) DEFAULT ''
	,IN IN_FLIGHTKEY VARCHAR(20) DEFAULT ''
	,IN IN_CURRENCY VARCHAR(3) DEFAULT 'CHF'
	,IN IN_EXPORT_ONLY INTEGER DEFAULT 1
	) DYNAMIC RESULT SETS 1

P1:

BEGIN
	DECLARE cursor1 CURSOR WITH RETURN
	FOR
	WITH tmptbl (
		PRICETOTAL
		,ALLOTMENT
		,DEPTS
		,ARRTS
		,CARRIER
		,FLIGHTNR
		,CHECKINMINBEFOREDEP
		,CHECKINTIMEDEV
		,FLIGHTKEY
		,LEGKEY
		,TOCODE
		,FLIGHTDAY
		,LEGDAY
		,POS
		)
	AS (
		SELECT func_flightpricing(TOOFLIGHTLEG.TOCODE, TOOFLIGHTLEG.LEGKEY, TOOFLIGHTLEGDAY.LEGDAY, cast(coalesce(nullif(IN_CURRENTDATE, ''), CURRENT DATE) AS DATE), IN_NRADULTS, cast(nullif(IN_CHDDOB1, '') AS DATE), cast(nullif(IN_CHDDOB2, '') AS DATE), cast(nullif(IN_CHDDOB3, '') AS DATE), cast(nullif(IN_CHDDOB4, '') AS DATE), IN_CURRENCY) AS PRICETOTAL
			,func_get_allotment2ch('', TOOFLIGHTLEG.LEGKEY, 'F', cast(TOOFLIGHTLEGDAY.LEGDAY AS VARCHAR(10)), cast((TOOFLIGHTLEGDAY.LEGDAY + 1 day) AS VARCHAR(10)), IN_CURRENTDATE) AS ALLOTMENT
			,cast(TIMESTAMP (
					coalesce(TOOFLIGHTLEGDAY.LEGDAY, TOOALLOTMENTS.ALLOTDATE)
					,TOOALLOTMENTS.DEPTIME
					) AS CHAR(26)) AS DEPTS
			,cast(TIMESTAMP (
					TOOALLOTMENTS.ALLOTDATE + TOOALLOTMENTS.ARRTIMEDEV days
					,TOOALLOTMENTS.ARRTIME
					) AS CHAR(26)) AS ARRTS
			,coalesce(nullif(TOOALLOTMENTS.CARRIER, ''), TOOFLIGHTLEG.CARRIER) AS CARRIER
			,coalesce(nullif(TOOALLOTMENTS.FLIGHTNR, ''), TOOFLIGHTLEG.FLIGHTNR) AS FLIGHTNR
			,coalesce(nullif(TOOALLOTMENTS.CHECKINMINBEFOREDEP, 0), TOOFLIGHTLEG.CHECKINMINBEFOREDEP) AS CHECKINMINBEFOREDEP
			,coalesce(nullif(TOOALLOTMENTS.CHECKINTIMEDEV, 0), TOOFLIGHTLEG.CHECKINTIMEDEV) AS CHECKINTIMEDEV
			,TOOFLIGHTLEGDAY.FLIGHTKEY
			,TOOFLIGHTLEGDAY.LEGKEY
			,TOOFLIGHTLEGDAY.TOCODE
			,TOOFLIGHTLEGDAY.FLIGHTDAY
			,TOOFLIGHTLEGDAY.LEGDAY
			,TOOFLIGHTLEGDAY.POS
		FROM TOOFLIGHT
		INNER JOIN TOOFLIGHTLEG ON TOOFLIGHT.FLIGHTKEY = TOOFLIGHTLEG.FLIGHTKEY
		INNER JOIN TOOFLIGHTLEGDAY ON TOOFLIGHTLEGDAY.FLIGHTKEY = TOOFLIGHT.FLIGHTKEY
			AND TOOFLIGHTLEGDAY.LEGKEY = TOOFLIGHTLEG.LEGKEY
		LEFT OUTER JOIN TOOALLOTMENTS ON TOOALLOTMENTS.ITEMKEY = TOOFLIGHTLEGDAY.LEGKEY
			AND TOOALLOTMENTS.ITEMTYPE = 'F'
			AND TOOALLOTMENTS.ALLOTDATE = TOOFLIGHTLEGDAY.LEGDAY
		WHERE TOOFLIGHTLEGDAY.LEGDAY BETWEEN IN_PRICEDATEFROM
				AND IN_PRICEDATETO
			AND TOOFLIGHT.DEP = coalesce(nullif(IN_DEPAIRPORTCODE, ''), TOOFLIGHT.DEP)
			AND TOOFLIGHT.ARR = coalesce(nullif(IN_ARRAIRPORTCODE, ''), TOOFLIGHT.ARR)
			AND TOOFLIGHT.TOCODE = coalesce(IN_TOCODE, '')
			AND TOOFLIGHTLEG.TOCODE = coalesce(IN_TOCODE, '')
			AND TOOFLIGHTLEGDAY.TOCODE = coalesce(IN_TOCODE, '')
			AND TOOALLOTMENTS.TOCODE = coalesce(IN_TOCODE, '')
			AND TOOFLIGHT.FLIGHTKEY = coalesce(nullif(IN_FLIGHTKEY, ''), TOOFLIGHT.FLIGHTKEY)
		)
		,tmptbl1 (
		PRICETOTAL
		,ALLOTMENT
		,DEPTS
		,ARRTS
		,CARRIER
		,FLIGHTNR
		,CHECKINMINBEFOREDEP
		,CHECKINTIMEDEV
		,FLIGHTKEY
		,LEGKEY
		,TOCODE
		,FLIGHTDAY
		,LEGDAY
		,POS
		,LEGJSON
		,LEGXML
		)
	AS (
		SELECT tmptbl.PRICETOTAL AS PRICETOTAL
			,tmptbl.ALLOTMENT AS ALLOTMENT
			,tmptbl.DEPTS AS DEPTS
			,tmptbl.ARRTS AS ARRTS
			,tmptbl.CARRIER AS CARRIER
			,tmptbl.FLIGHTNR AS FLIGHTNR
			,tmptbl.CHECKINMINBEFOREDEP AS CHECKINMINBEFOREDEP
			,tmptbl.CHECKINTIMEDEV AS CHECKINTIMEDEV
			,tmptbl.FLIGHTKEY AS FLIGHTKEY
			,tmptbl.LEGKEY AS LEGKEY
			,tmptbl.TOCODE AS TOCODE
			,tmptbl.FLIGHTDAY AS FLIGHTDAY
			,tmptbl.LEGDAY AS LEGDAY
			,tmptbl.POS AS POS
			,'{' || '"LegPrice":"' || coalesce(tmptbl.PRICETOTAL, 0.00) || '", ' || '"LegAllotment":"' || coalesce(tmptbl.ALLOTMENT, 'XX') || '", ' || '"LegKey":"' || coalesce(tmptbl.LEGKEY, '') || '", ' || '"LegDepTS":"' || coalesce(tmptbl.DEPTS, '') || '", ' || '"LegArrTS":"' || coalesce(tmptbl.ARRTS, '') || '", ' || '"LegCarrier":"' || coalesce(tmptbl.CARRIER, '') || '", ' || '"LegFlightNr":"' || coalesce(tmptbl.FLIGHTNR, '') || '", ' || '"LegPos":"' || coalesce(tmptbl.POS, '') || '", ' || '"LegDep":"' || coalesce(TOOFLIGHTLEG.DEP, '') || '", ' || '"LegArr":"' || coalesce(TOOFLIGHTLEG.ARR, '') || '", ' || '"CheckInMinBeforeDep":"' || coalesce(tmptbl.CHECKINMINBEFOREDEP, 0) || '", ' || '"CheckInTimeDev":"' || coalesce(tmptbl.CHECKINTIMEDEV, 0) || '", ' || '"Class":"' || coalesce(TOOFLIGHTLEG.CLASS, '') || '", ' || '"ClassDesc":"' || coalesce(TOOFLIGHTLEG.CLASSDESC, '') || '", ' || '"SeatClass":"' || coalesce(TOOFLIGHTLEG.SEATCLASS, '') || '", ' || '"SeatClassNr":"' || coalesce(TOOFLIGHTLEG.SEATCLASSNR, '') || '"' || '}'
			,XMLELEMENT(NAME "Leg", XMLATTRIBUTES(tmptbl.PRICETOTAL AS "LegPrice", tmptbl.ALLOTMENT AS "LegAllotment", tmptbl.LEGKEY AS "LegKey", tmptbl.DEPTS AS "LegDepTS", tmptbl.ARRTS AS "LegArrTS", tmptbl.CARRIER AS "LegCarrier", tmptbl.FLIGHTNR AS "LegFlightNr", tmptbl.POS AS "LegPos", TOOFLIGHTLEG.DEP AS "LegDep", TOOFLIGHTLEG.ARR AS "LegArr", tmptbl.CHECKINMINBEFOREDEP AS "CheckInMinBeforeDep", tmptbl.CHECKINTIMEDEV AS "CheckInTimeDev", TOOFLIGHTLEG.CLASS AS "Class", TOOFLIGHTLEG.CLASSDESC AS "ClassDesc", TOOFLIGHTLEG.SEATCLASS AS "SeatClass", TOOFLIGHTLEG.SEATCLASSNR AS "SeatClassNr"))
		FROM tmptbl
		INNER JOIN TOOFLIGHTLEG ON TOOFLIGHTLEG.FLIGHTKEY = tmptbl.FLIGHTKEY
			AND TOOFLIGHTLEG.LEGKEY = tmptbl.LEGKEY
			AND TOOFLIGHTLEG.TOCODE = tmptbl.TOCODE
		INNER JOIN TOOFLIGHTLEGDAY ON TOOFLIGHTLEGDAY.FLIGHTKEY = TOOFLIGHTLEG.FLIGHTKEY
			AND TOOFLIGHTLEGDAY.LEGKEY = TOOFLIGHTLEG.LEGKEY
			AND TOOFLIGHTLEGDAY.TOCODE = TOOFLIGHTLEG.TOCODE
			AND TOOFLIGHTLEGDAY.LEGDAY = tmptbl.LEGDAY
		WHERE TOOFLIGHTLEG.FLIGHTKEY = tmptbl.FLIGHTKEY
			AND TOOFLIGHTLEG.LEGKEY = tmptbl.LEGKEY
			AND TOOFLIGHTLEG.TOCODE = tmptbl.TOCODE
			AND TOOFLIGHTLEGDAY.FLIGHTKEY = TOOFLIGHTLEG.FLIGHTKEY
			AND TOOFLIGHTLEGDAY.LEGKEY = TOOFLIGHTLEG.LEGKEY
			AND TOOFLIGHTLEGDAY.TOCODE = TOOFLIGHTLEG.TOCODE
			AND TOOFLIGHTLEGDAY.LEGDAY = tmptbl.LEGDAY
			AND (
				coalesce(IN_IGNORE_XX, 0) = 0
				OR IN_IGNORE_XX = 1
				AND tmptbl.ALLOTMENT NOT IN ('XX')
				)
			AND (
				coalesce(IN_IGNORE_RQ, 0) = 0
				OR IN_IGNORE_RQ = 1
				AND tmptbl.ALLOTMENT NOT IN ('RQ')
				)
			AND (
				coalesce(IN_IGNORE_PRICE0, 0) = 0
				OR IN_IGNORE_PRICE0 = 1
				AND coalesce(tmptbl.PRICETOTAL, 0) <> 0
				)
		)
		,tmptbl2 (
		FLIGHTKEY
		,TOCODE
		,FLIGHTDAY
		,PRICETOTAL
		,COUNTXX
		,COUNTRQ
		,LEGCOUNT
		,MINALLOTMENT
		,DEPTS
		,ARRTS
		,LEGJSON
		,LEGXML
		)
	AS (
		SELECT tmptbl1.FLIGHTKEY
			,max(tmptbl1.TOCODE)
			,tmptbl1.FLIGHTDAY
			,CASE 
				WHEN max(TOOFLIGHT.MULTILEG) = 1
					THEN coalesce(nullif(sum(func_flightpricing(TOOFLIGHT.TOCODE, TOOFLIGHT.FLIGHTKEY, cast(tmptbl1.FLIGHTDAY AS VARCHAR(10)), cast(coalesce(nullif(IN_CURRENTDATE, ''), CURRENT DATE) AS DATE), IN_NRADULTS, cast(nullif(IN_CHDDOB1, '') AS DATE), cast(nullif(IN_CHDDOB2, '') AS DATE), cast(nullif(IN_CHDDOB3, '') AS DATE), cast(nullif(IN_CHDDOB4, '') AS DATE), IN_CURRENCY)), 0), sum(tmptbl1.PRICETOTAL), 0)
				WHEN max(TOOFLIGHT.MULTILEG) = 0
					AND count(CASE 
							WHEN tmptbl1.PRICETOTAL <> 0
								THEN 1
							ELSE 0
							END) = count(tmptbl1.LEGKEY)
					THEN sum(tmptbl1.PRICETOTAL)
				ELSE 0
				END AS "PriceTotal"
			,sum(CASE 
					WHEN tmptbl1.ALLOTMENT = 'XX'
						THEN 1
					ELSE 0
					END) AS COUNTXX
			,sum(CASE 
					WHEN tmptbl1.ALLOTMENT = 'RQ'
						THEN 1
					ELSE 0
					END) AS COUNTRQ
			,count(*)
			,min(CASE 
					WHEN isnumeric(tmptbl1.ALLOTMENT) = 1
						THEN cast(tmptbl1.ALLOTMENT AS INTEGER)
					ELSE 0
					END) AS MINALLOTMENT
			,min(tmptbl1.DEPTS) AS DEPTS
			,max(tmptbl1.ARRTS) AS ARRTS
			,'{"Legs":[' || LISTAGG(tmptbl1.LEGJSON, ', ') WITHIN
		GROUP (
				ORDER BY tmptbl1.POS
				) || ']}'
			,XML2CLOB(XMLELEMENT(NAME "Legs", XMLAGG(tmptbl1.LEGXML ORDER BY tmptbl1.POS)))
		FROM tmptbl1
		INNER JOIN TOOFLIGHT ON TOOFLIGHT.FLIGHTKEY = tmptbl1.FLIGHTKEY
			AND TOOFLIGHT.TOCODE = tmptbl1.TOCODE
		GROUP BY tmptbl1.FLIGHTKEY
			,tmptbl1.FLIGHTDAY
			,tmptbl1.TOCODE
		)
	SELECT MAX(TOOFLIGHT.TOCODE) AS TOCODE
		,TOOFLIGHT.FLIGHTKEY AS FLIGHTKEY
		,max(TOOFLIGHT.DEP) AS DEP
		,max(TOOFLIGHT.ARR) AS ARR
		,max(TOOFLIGHT.CARRIER) AS CARRIER
		,max(TOOFLIGHT.FLIGHTNR) AS FLIGHTNR
		,max(TOOFLIGHT.CLASS) AS CLASS
		,max(TOOFLIGHT.CLASSDESC) AS CLASSDESC
		,max(TOOFLIGHT.SEATCLASS) AS SEATCLASS
		,max(TOOFLIGHT.SEATCLASSNR) AS SEATCLASSNR
		,max(TOOFLIGHT.DESTINATIONCODE) AS DESTINATIONCODE
		,max(TOOFLIGHT.PASSIVE) AS PASSIVE
		,max(TOOFLIGHT.PASSIVEFROMDATE) AS PASSIVEFROMDATE
		,max(TOOFLIGHT.MULTILEG) AS MULTILEG
		,max(TOOFLIGHT.DEPGMTOFFSET) AS DEPGMTOFFSET
		,max(TOOFLIGHT.ARRGMTOFFSET) AS ARRGMTOFFSET
		,max(tmptbl2.LEGCOUNT) AS "FlightLegCount"
		,min(tmptbl2.DEPTS) AS "DepTS"
		,max(tmptbl2.ARRTS) AS "ArrTS"
		,coalesce(sum(tmptbl2.PRICETOTAL), 0) AS "PriceSum"
		,max(CASE 
				WHEN tmptbl2.COUNTXX > 0
					THEN 'XX'
				WHEN tmptbl2.COUNTRQ > 0
					THEN 'RQ'
				ELSE cast(tmptbl2.MINALLOTMENT AS VARCHAR(10))
				END) AS "Allotment"
		,max(cast(tmptbl2.LEGJSON AS VARCHAR(4000))) AS "LegJson"
		,max(cast(tmptbl2.LEGXML AS VARCHAR(4000))) AS "LegXml"
	FROM tmptbl2
	INNER JOIN TOOFLIGHT ON TOOFLIGHT.FLIGHTKEY = tmptbl2.FLIGHTKEY
		AND TOOFLIGHT.TOCODE = tmptbl2.TOCODE
	WHERE (
			coalesce(IN_IGNORE_XX, 0) = 0
			OR IN_IGNORE_XX = 1
			AND tmptbl2.COUNTXX = 0
			)
		AND (
			coalesce(IN_IGNORE_RQ, 0) = 0
			OR IN_IGNORE_RQ = 1
			AND tmptbl2.COUNTRQ = 0
			)
		AND (
			coalesce(IN_IGNORE_PRICE0, 0) = 0
			OR IN_IGNORE_PRICE0 = 1
			AND coalesce(tmptbl2.PRICETOTAL, 0) <> 0
			)
	GROUP BY TOOFLIGHT.FLIGHTKEY
		,tmptbl2.FLIGHTDAY;

	-- Cursor left open for client application
	OPEN cursor1;
END P1