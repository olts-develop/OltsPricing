CREATE
  OR REPLACE PROCEDURE SP_PRICING_AV_FLIGHT1 (
  IN IN_TOCODE VARCHAR(5) DEFAULT ''
  ,IN IN_DEPAIRPORTCODE VARCHAR(5) DEFAULT ''
  ,IN IN_ARRAIRPORTCODE VARCHAR(5) DEFAULT ''
  ,IN IN_PRICEDATEFROM VARCHAR(10)
  ,IN IN_PRICEDATETO VARCHAR(10)
  ,IN IN_NRADULTS INTEGER DEFAULT 2
  ,IN IN_CHDDOB1 VARCHAR(10) DEFAULT ''
  ,IN IN_CHDDOB2 VARCHAR(10) DEFAULT ''
  ,IN IN_CHDDOB3 VARCHAR(10) DEFAULT ''
  ,IN IN_CHDDOB4 VARCHAR(10) DEFAULT ''
  ,IN IN_IGNORE_XX INTEGER DEFAULT 0
  ,IN IN_IGNORE_RQ INTEGER DEFAULT 0
  ,IN IN_IGNORE_PRICE0 INTEGER DEFAULT 1
  ,IN IN_CURRENTDATE VARCHAR(10) DEFAULT ''
  ,IN IN_FLIGHTKEY VARCHAR(20) DEFAULT ''
  ,IN IN_CURRENCY VARCHAR(3) DEFAULT 'CHF'
  ,IN IN_EXPORT_ONLY INTEGER DEFAULT 1
  ) DYNAMIC RESULT SETS 1

P1:

BEGIN
  DECLARE cursor1 CURSOR WITH RETURN
  FOR
  
CREATE
  OR REPLACE PROCEDURE SP_PRICING_AV_FLIGHT1 (
  IN IN_TOCODE VARCHAR(5) DEFAULT ''
  ,IN IN_DEPAIRPORTCODE VARCHAR(5) DEFAULT ''
  ,IN IN_ARRAIRPORTCODE VARCHAR(5) DEFAULT ''
  ,IN IN_PRICEDATEFROM VARCHAR(10)
  ,IN IN_PRICEDATETO VARCHAR(10)
  ,IN IN_NRADULTS INTEGER DEFAULT 2
  ,IN IN_CHDDOB1 VARCHAR(10) DEFAULT ''
  ,IN IN_CHDDOB2 VARCHAR(10) DEFAULT ''
  ,IN IN_CHDDOB3 VARCHAR(10) DEFAULT ''
  ,IN IN_CHDDOB4 VARCHAR(10) DEFAULT ''
  ,IN IN_IGNORE_XX INTEGER DEFAULT 0
  ,IN IN_IGNORE_RQ INTEGER DEFAULT 0
  ,IN IN_IGNORE_PRICE0 INTEGER DEFAULT 1
  ,IN IN_CURRENTDATE VARCHAR(10) DEFAULT ''
  ,IN IN_FLIGHTKEY VARCHAR(20) DEFAULT ''
  ,IN IN_CURRENCY VARCHAR(3) DEFAULT 'CHF'
  ,IN IN_EXPORT_ONLY INTEGER DEFAULT 1
  ) DYNAMIC RESULT SETS 1

P1:

BEGIN
  DECLARE cursor1 CURSOR WITH RETURN
  FOR
  
  with tmptbl (PRICETOTAL,ALLOTMENT,DEPTS,ARRTS,CARRIER,FLIGHTNR,CHECKINMINBEFOREDEP,CHECKINTIMEDEV,FLIGHTKEY,LEGKEY,TOCODE,FLIGHTDAY,LEGDAY,POS) as
    (
      select
      func_flightpricing(TOOFLIGHTLEG.TOCODE, TOOFLIGHTLEG.LEGKEY, TOOFLIGHTLEGDAY.LEGDAY, cast(coalesce(nullif(IN_CURRENTDATE,''),current date) as date), IN_NRADULTS, cast(nullif(IN_CHDDOB1,'') as date), cast(nullif(IN_CHDDOB2,'') as date), cast(nullif(IN_CHDDOB3,'') as date), cast(nullif(IN_CHDDOB4,'') as date), IN_CURRENCY) AS PRICETOTAL
      ,func_get_allotment2ch('', TOOFLIGHTLEG.LEGKEY, 'F', cast(TOOFLIGHTLEGDAY.LEGDAY as VARCHAR(10)), cast((TOOFLIGHTLEGDAY.LEGDAY + 1 day) as VARCHAR(10)), IN_CURRENTDATE ) as ALLOTMENT
      ,cast(timestamp (coalesce(TOOFLIGHTLEGDAY.LEGDAY,TOOALLOTMENTS.ALLOTDATE),coalesce(TOOALLOTMENTS.DEPTIME,TOOFLIGHTLEG.DEP)) as char(26)) as DEPTS
      ,cast(timestamp (TOOALLOTMENTS.ALLOTDATE + TOOALLOTMENTS.ARRTIMEDEV days,TOOALLOTMENTS.ARRTIME) as char(26)) as ARRTS
      ,coalesce(nullif(TOOALLOTMENTS.CARRIER,''),TOOFLIGHTLEG.CARRIER) as CARRIER
      ,coalesce(nullif(TOOALLOTMENTS.FLIGHTNR,''),TOOFLIGHTLEG.FLIGHTNR) as FLIGHTNR
      ,coalesce(nullif(TOOALLOTMENTS.CHECKINMINBEFOREDEP,0),TOOFLIGHTLEG.CHECKINMINBEFOREDEP) as CHECKINMINBEFOREDEP
      ,coalesce(nullif(TOOALLOTMENTS.CHECKINTIMEDEV,0),TOOFLIGHTLEG.CHECKINTIMEDEV) as CHECKINTIMEDEV
      
      ,TOOFLIGHTLEGDAY.FLIGHTKEY
      ,TOOFLIGHTLEGDAY.LEGKEY
      ,TOOFLIGHTLEGDAY.TOCODE
      ,TOOFLIGHTLEGDAY.FLIGHTDAY
      ,TOOFLIGHTLEGDAY.LEGDAY
      ,TOOFLIGHTLEGDAY.POS
      FROM
        TOOFLIGHT
        inner join TOOFLIGHTLEG on TOOFLIGHT.FLIGHTKEY = TOOFLIGHTLEG.FLIGHTKEY
        inner join TOOFLIGHTLEGDAY on TOOFLIGHTLEGDAY.FLIGHTKEY=TOOFLIGHT.FLIGHTKEY and TOOFLIGHTLEGDAY.LEGKEY=TOOFLIGHTLEG.LEGKEY
        left outer join TOOALLOTMENTS on TOOALLOTMENTS.ITEMKEY = TOOFLIGHTLEGDAY.LEGKEY and TOOALLOTMENTS.ITEMTYPE='F' and TOOALLOTMENTS.ALLOTDATE=TOOFLIGHTLEGDAY.LEGDAY
      where
        TOOFLIGHTLEGDAY.LEGDAY between IN_PRICEDATEFROM and IN_PRICEDATETO
        and TOOFLIGHT.DEP=coalesce(nullif(IN_DEPAIRPORTCODE,''),TOOFLIGHT.DEP)
        and TOOFLIGHT.ARR=coalesce(nullif(IN_ARRAIRPORTCODE,''),TOOFLIGHT.ARR)
        and TOOFLIGHT.TOCODE=coalesce(IN_TOCODE,'')
        and TOOFLIGHTLEG.TOCODE=coalesce(IN_TOCODE,'')
        and TOOFLIGHTLEGDAY.TOCODE=coalesce(IN_TOCODE,'')
        and TOOALLOTMENTS.TOCODE=coalesce(IN_TOCODE,'')
    )
  
  SELECT
    MAX(TOOFLIGHT.TOCODE) as TOCODE
    ,TOOFLIGHT.FLIGHTKEY as FLIGHTKEY
    ,max(TOOFLIGHT.DEP) as DEP
    ,max(TOOFLIGHT.ARR) as ARR
    ,max(TOOFLIGHT.CARRIER) as CARRIER
    ,max(TOOFLIGHT.FLIGHTNR) as FLIGHTNR
    ,max(TOOFLIGHT.CLASS) as CLASS
    ,max(TOOFLIGHT.CLASSDESC) as CLASSDESC
    ,max(TOOFLIGHT.SEATCLASS) as SEATCLASS
    ,max(TOOFLIGHT.SEATCLASSNR) as SEATCLASSNR
    ,max(TOOFLIGHT.DESTINATIONCODE) as DESTINATIONCODE
    ,max(TOOFLIGHT.PASSIVE) as PASSIVE
    ,max(TOOFLIGHT.PASSIVEFROMDATE) as PASSIVEFROMDATE
    ,max(TOOFLIGHT.MULTILEG) as MULTILEG
    ,count(tmptbl.LEGKEY) as "FlightLegCount"
    ,min(tmptbl.DEPTS) as "DepTS"
    ,max(tmptbl.ARRTS) as "ArrTS"
    ,case
       when max(TOOFLIGHT.MULTILEG)=1 then
         coalesce(nullif(sum(func_flightpricing(TOOFLIGHT.TOCODE, TOOFLIGHT.FLIGHTKEY, cast(tmptbl.FLIGHTDAY as VARCHAR(10)), cast(coalesce(nullif(IN_CURRENTDATE,''),current date) as date), IN_NRADULTS, cast(nullif(IN_CHDDOB1,'') as date), cast(nullif(IN_CHDDOB2,'') as date), cast(nullif(IN_CHDDOB3,'') as date), cast(nullif(IN_CHDDOB4,'') as date), IN_CURRENCY)),0),sum(tmptbl.PRICETOTAL),0)
       when max(TOOFLIGHT.MULTILEG)=0 and count(case when tmptbl.PRICETOTAL<>0 then 1 else 0 end)=count(tmptbl.LEGKEY) then
         sum(tmptbl.PRICETOTAL)
       else
         0
       end
     as "PriceSum"

    ,XML2CLOB(
      
        XMLAGG(
          XMLELEMENT(
            NAME "Leg"
            , XMLATTRIBUTES(
              tmptbl.PRICETOTAL as "LegPrice"
              ,tmptbl.ALLOTMENT as "LegAllotment"
              ,tmptbl.LEGKEY as "LegKey"
              , tmptbl.DEPTS as "LegDepTS"
              , tmptbl.ARRTS as "LegArrTS"
              , tmptbl.CARRIER as "LegCarrier"
              , tmptbl.FLIGHTNR as "LegFlightNr"
              , tmptbl.POS as "LegPos"
              ,TOOFLIGHTLEG.DEP as "LegDep"
              ,TOOFLIGHTLEG.ARR as "LegArr"
              ,tmptbl.CHECKINMINBEFOREDEP as "CheckInMinBeforeDep"
              ,tmptbl.CHECKINTIMEDEV as "CheckInTimeDev"
              ,TOOFLIGHTLEG.CLASS as "Class"
              ,TOOFLIGHTLEG.CLASSDESC as "ClassDesc"
              ,TOOFLIGHTLEG.SEATCLASS as "SeatClass"
              ,TOOFLIGHTLEG.SEATCLASSNR as "SeatClassNr"
              
            )
          ) ORDER BY tmptbl.POS
        
      )
    )
  
  FROM
    tmptbl
    inner join TOOFLIGHT on TOOFLIGHT.FLIGHTKEY=tmptbl.FLIGHTKEY and TOOFLIGHT.TOCODE=tmptbl.TOCODE
    inner join TOOFLIGHTLEG on TOOFLIGHTLEG.FLIGHTKEY = tmptbl.FLIGHTKEY and TOOFLIGHTLEG.LEGKEY = tmptbl.LEGKEY
  
  GROUP BY
    TOOFLIGHT.FLIGHTKEY,tmptbl.FLIGHTDAY,TOOFLIGHTLEG.FLIGHTKEY
  ;

  -- Cursor left open for client application
  OPEN cursor1;
END P1

@
